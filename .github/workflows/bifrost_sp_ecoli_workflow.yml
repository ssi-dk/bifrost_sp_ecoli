name: bifrost sp ecoli workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  repository_dispatch:  # webhook event to trigger this action workflow upon push to the submodule ecoli_fbi 
    types: ecoli-fbi-webhook 

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'true'  #Initialize and update submodules -> git submodule init && git submodule update
        
      # Step 2: Update submodule to the latest commit
      - name: Update submodule
        run: |
          cd bifrost_sp_ecoli/ecoli_fbi
          git fetch origin
          git checkout main  # or the specific branch you want to track
          git pull origin main  # pull the latest changes
          
          # print the latest commit of ecoli_fbi
          LATEST_COMMIT=$(git rev-parse HEAD)
          echo "Updated ecoli_fbi to latest commit: $LATEST_COMMIT"

      # Step 3: Set environment variables
      - name: Set environment variables
        run: |
          echo "BIFROST_INSTALL_DIR='${{ github.workspace }}'" >> $GITHUB_ENV

      # Step 4: Extract version from __init__.py and set ENV_NAME
      - name: Set ENV_NAME
        run: |
          VERSION=$(grep "__version__" bifrost_sp_ecoli/__init__.py | cut -d "'" -f 2)
          REPO_NAME=$(basename "${{ github.workspace }}")
          ENV_NAME="${REPO_NAME}_v${VERSION}"
          # Echo the ENV_NAME to the log for debugging
          echo "Setting ENV_NAME to: $ENV_NAME"
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          docker build \
          --build-arg BIFROST_DB_KEY=${{ secrets.MONGODB_ATLAS_CONNECTION }} \
          -t bifrost_sp_ecoli_image . 
      # docker build -t bifrost_sp_ecoli_image -f /path/to/your/Dockerfile .

      # Step 6: Run tests in Docker container
      - name: Run tests
        run: |
          ENV_NAME=${{ env.ENV_NAME }}
          docker run --rm \
          -e BIFROST_INSTALL_DIR='${{ github.workspace }}' \
          -e BIFROST_DB_KEY='${{ secrets.MONGODB_ATLAS_CONNECTION }}' \
          bifrost_sp_ecoli_image \
          bash -c "
            if [ -z \"$ENV_NAME\" ]; then \
                echo 'conda environment name has not been accurately exported. Check install.sh'; \
                exit 1; \
            else \
              source /opt/conda/etc/profile.d/conda.sh && \
              echo 'Activating conda environment: $ENV_NAME' && \
              conda activate $ENV_NAME && \
              if [ $? -ne 0 ]; then \
                echo 'Failed to activate conda environment: $ENV_NAME. Please check if it exists.'; \
                conda info --envs; \
                exit 1; \
              fi; \
            fi && \
            python cmd_test.py"